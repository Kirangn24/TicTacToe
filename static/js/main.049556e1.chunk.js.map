{"version":3,"sources":["components/Box.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Box","_ref","value","onClick","_jsx","style","height","width","padding","margin","borderRadius","backgroundColor","color","border","cursor","fontSize","children","initalValue","Board","boardState","updateBoardState","useState","boardValue","updateBoardValue","gameEnd","setGameEnd","winner","setWinner","useEffect","lines","i","length","handelClick","idx","newArr","Array","from","alert","console","log","_jsxs","paddingTop","display","justifyContent","alignItems","e","marginTop","_Fragment","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.049556e1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Box({ value, onClick }) {\r\n  const style = {\r\n    height: \"60px\",\r\n    width: \"60px\",\r\n    padding: 0,\r\n    margin: \"8px\",\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(177, 161, 132)\",\r\n    color: \"white\",\r\n    border: 0,\r\n    cursor: \"pointer\",\r\n    fontSize: \"1rem\",\r\n  };\r\n\r\n  return (\r\n    <button style={style} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Box;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Box from \"./Box\";\r\n\r\nconst initalValue = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n\r\nfunction Board() {\r\n  const [boardState, updateBoardState] = useState(initalValue);\r\n  const [boardValue, updateBoardValue] = useState(true);\r\n  const [gameEnd, setGameEnd] = useState(false);\r\n  const [winner, setWinner] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      if (\r\n        boardState[lines[i][0]] &&\r\n        boardState[lines[i][0]] === boardState[lines[i][1]] &&\r\n        boardState[lines[i][0]] === boardState[lines[i][2]]\r\n      ) {\r\n        setWinner(boardState[lines[i][0]]);\r\n        setGameEnd(true);\r\n      }\r\n    }\r\n  }, [boardState]);\r\n\r\n  const handelClick = (idx) => {\r\n    if (gameEnd) {\r\n      return;\r\n    }\r\n\r\n    const newArr = Array.from(boardState);\r\n\r\n    if (newArr[idx]) {\r\n      alert(\"click empty cell\");\r\n      console.log(\"already clicked\");\r\n      return;\r\n    }\r\n\r\n    newArr[idx] = boardValue ? \"X\" : \"O\";\r\n    updateBoardState(newArr);\r\n    updateBoardValue(!boardValue);\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"150px\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Box value={boardState[0]} onClick={(e) => handelClick(0)} />\r\n        <Box value={boardState[1]} onClick={(e) => handelClick(1)} />\r\n        <Box value={boardState[2]} onClick={(e) => handelClick(2)} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Box value={boardState[3]} onClick={(e) => handelClick(3)} />\r\n        <Box value={boardState[4]} onClick={(e) => handelClick(4)} />\r\n        <Box value={boardState[5]} onClick={(e) => handelClick(5)} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Box value={boardState[6]} onClick={(e) => handelClick(6)} />\r\n        <Box value={boardState[7]} onClick={(e) => handelClick(7)} />\r\n        <Box value={boardState[8]} onClick={(e) => handelClick(8)} />\r\n      </div>\r\n\r\n      <button\r\n        onClick={(e) => {\r\n          updateBoardState(initalValue);\r\n          setGameEnd(false);\r\n          updateBoardValue(true);\r\n        }}\r\n        style={{ marginTop: \"15px\", padding: \"8px 15px\", cursor:\"pointer\"}}\r\n      >\r\n        Reset\r\n      </button>\r\n\r\n      <div style={{ marginTop: \"15px\" }}>\r\n        {gameEnd ? <span>{winner} won the game</span> : <></>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import \"./App.css\";\r\nimport Board from \"./components/Board\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Board />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}